group = PROJ_GROUP
version = PROJ_VERSION
project.archivesBaseName = PROJ_ARTIFACTID

apply plugin: 'com.jfrog.bintray'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'maven-publish'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += configurations.compile
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += project.files(configurations.compile.files, android.getBootClasspath().join(File.pathSeparator))
//}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title PROJ_ARTIFACTID
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
    repositories.mavenInstaller {
        pom.project {
            name PROJ_NAME
            description PROJ_DESCRIPTION
            url PROJ_WEBSITEURL
            inceptionYear new Date()

            packaging 'aar'
            groupId PROJ_GROUP
            artifactId PROJ_ARTIFACTID
            version PROJ_VERSION

            //设置开源证书信息
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection PROJ_VCSURL
                developerConnection PROJ_VCSURL
                url PROJ_WEBSITEURL
            }
            //添加开发者信息
            developers {
                developer {
                    id DEVELOPER_ID
                    name DEVELOPER_NAME
                    email DEVELOPER_EMAIL
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : project.property('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : project.property('BINTRAY_KEY')

    configurations = ['archives']

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //是否发布//[Default: false] Whether version should be auto published after an upload
//    override = true //[Default: false] Whether to override version artifacts already published

    pkg {
        repo = 'maven'
        name = PROJ_NAME
        licenses = ['Apache-2.0']
        vcsUrl = PROJ_VCSURL
        websiteUrl = PROJ_WEBSITEURL
        issueTrackerUrl = PROJ_ISSUETRACKERURL

        publicDownloadNumbers = true

        version {
            name = PROJ_VERSION
            desc = PROJ_DESCRIPTION
            released  = new Date()
            vcsTag = PROJ_VERSION

            gpg {
                sign = true
                passphrase = project.getProperty("GPG_PASS")
            }

            mavenCentralSync {
               // sync = project.hasProperty('SONATYPE_USER') && project.hasProperty('SONATYPE_KEY')
                sync = true
                user = project.hasProperty('SONATYPE_USER') ? project.property('SONATYPE_USER') : ""
                password = project.hasProperty('SONATYPE_PASS') ? project.property('SONATYPE_PASS') : ""
                close = '1'
            }
        }
    }
}